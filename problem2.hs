--Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
--By starting with 1 and 2, the first 10 terms will be:

--1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

--By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
--find the sum of the even-valued terms

-- kan beter met sum takewhile filters,..

fib :: [Int]
fib = 0 : 1 : [ (fib !! (l-2) ) + (fib !! (l-1)) | l <- [2..]]

fibn :: Int -> [Int]
fibn n = [x | x <- take n fib]

even_fib :: Int ->[Int]
even_fib n = [e | e <- (fibn 40) , e `mod` 2 == 0, e < n]

count n = foldl1 (+) (even_fib n)
